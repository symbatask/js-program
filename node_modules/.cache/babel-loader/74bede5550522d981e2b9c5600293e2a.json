{"ast":null,"code":"import axios from 'axios';\nimport { GET_HOMEWORKS, GET_COMMENTS, CREATE_NEW_COMMENT, DELETE_COMMENT } from '../actions/actions';\nconst initialState = {\n  homeworks: [],\n  comments: []\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_HOMEWORKS:\n      return { ...state,\n        homeworks: action.homeworks\n      };\n\n    case GET_COMMENTS:\n      return { ...state,\n        comments: action.comments || []\n      };\n\n    case DELETE_COMMENT:\n      return { ...state,\n        comments: action.comments\n      };\n\n    case CREATE_NEW_COMMENT:\n      return { ...state,\n        comments: [...state.comments, action.message]\n      };\n\n    default:\n      return state;\n  }\n});\nexport function getHomeworks() {\n  return dispatch => {\n    axios.get('/api/v1/homeworks').then(_ref => {\n      let {\n        data: homeworks\n      } = _ref;\n      return dispatch({\n        type: GET_HOMEWORKS,\n        homeworks\n      });\n    });\n  };\n}\nexport function getComments(work, user) {\n  return dispatch => {\n    axios.post('/api/v1/homeworks/comments', {\n      work,\n      user\n    }).then(_ref2 => {\n      let {\n        data: comments\n      } = _ref2;\n      return dispatch({\n        type: GET_COMMENTS,\n        comments\n      });\n    });\n  };\n}\nexport function createMessage(work, newMessage) {\n  const message = { ...newMessage,\n    date: +new Date()\n  };\n  return (dispatch, getState) => {\n    let {\n      comments\n    } = getState().homeworks;\n    comments = [...comments, message];\n    axios.post('/api/v1/homeworks/comments/create', {\n      work,\n      comments\n    }).then(() => dispatch({\n      type: CREATE_NEW_COMMENT,\n      message\n    }));\n  };\n}\nexport function deleteComment(work, date) {\n  return (dispatch, getState) => {\n    let {\n      comments\n    } = getState().homeworks;\n    comments = comments.filter(el => el.date !== date);\n    axios.patch('/api/v1/homeworks/comments/delete', {\n      work,\n      comments\n    }).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      return data === 'success' ? dispatch({\n        type: DELETE_COMMENT,\n        comments\n      }) : '';\n    });\n  };\n}","map":{"version":3,"sources":["/Users/symbat.askarova33gmail.com/Desktop/program-js/src/client/redux/reducers/homeworks.js"],"names":["axios","GET_HOMEWORKS","GET_COMMENTS","CREATE_NEW_COMMENT","DELETE_COMMENT","initialState","homeworks","comments","state","action","type","message","getHomeworks","dispatch","get","then","data","getComments","work","user","post","createMessage","newMessage","date","Date","getState","deleteComment","filter","el","patch"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { GET_HOMEWORKS, GET_COMMENTS, CREATE_NEW_COMMENT, DELETE_COMMENT } from '../actions/actions'\r\n\r\nconst initialState = {\r\n  homeworks: [],\r\n  comments: []\r\n}\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HOMEWORKS:\r\n      return { ...state, homeworks: action.homeworks }\r\n    case GET_COMMENTS:\r\n      return { ...state, comments: action.comments || [] }\r\n    case DELETE_COMMENT:\r\n      return { ...state, comments: action.comments }\r\n    case CREATE_NEW_COMMENT:\r\n      return { ...state, comments: [...state.comments, action.message] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function getHomeworks() {\r\n  return (dispatch) => {\r\n    axios\r\n      .get('/api/v1/homeworks')\r\n      .then(({ data: homeworks }) => dispatch({ type: GET_HOMEWORKS, homeworks }))\r\n  }\r\n}\r\n\r\nexport function getComments(work, user) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post('/api/v1/homeworks/comments', { work, user })\r\n      .then(({ data: comments }) => dispatch({ type: GET_COMMENTS, comments }))\r\n  }\r\n}\r\n\r\nexport function createMessage(work, newMessage) {\r\n  const message = {\r\n    ...newMessage,\r\n    date: +new Date()\r\n  }\r\n  return (dispatch, getState) => {\r\n    let { comments } = getState().homeworks\r\n    comments = [...comments, message]\r\n    axios.post('/api/v1/homeworks/comments/create', {\r\n      work,\r\n      comments\r\n    }).then(() => dispatch({ type: CREATE_NEW_COMMENT, message }))\r\n\r\n  }\r\n}\r\n\r\nexport function deleteComment(work, date) {\r\n  return (dispatch, getState) => {\r\n    let { comments } = getState().homeworks\r\n    comments = comments.filter((el) => el.date !== date)\r\n    axios.patch('/api/v1/homeworks/comments/delete', {\r\n      work,\r\n      comments\r\n    }).then(({data}) => data === 'success' ? dispatch({ type: DELETE_COMMENT, comments }) : '')\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}