{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { TRY_SIGN_IN, SIGN_IN, LOG_OUT } from '../actions/actions';\nconst cookies = new Cookies();\nconst initialState = {\n  token: cookies.get('token'),\n  user: '',\n  isLoading: true,\n  isAuth: false\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state,\n        user: action.user,\n        token: action.token,\n        isLoading: action.isLoading,\n        isAuth: action.isAuth\n      };\n\n    case TRY_SIGN_IN:\n      return { ...state,\n        user: action.user,\n        token: action.token,\n        isLoading: action.isLoading,\n        isAuth: action.isAuth\n      };\n\n    case LOG_OUT:\n      return { ...state,\n        user: '',\n        token: '',\n        isAuth: false\n      };\n\n    case 'FAILED_LOAD':\n      return { ...state,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n});\nexport function trySignIn() {\n  return dispatch => {\n    axios.get('/api/v1/signin').then(_ref => {\n      let {\n        data\n      } = _ref;\n      dispatch({\n        type: TRY_SIGN_IN,\n        user: data.user,\n        token: data.token,\n        isLoading: false,\n        isAuth: true\n      });\n    });\n  };\n}\nexport function signIn(userInformation) {\n  return dispatch => {\n    axios.post('/api/v1/signin', userInformation).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      dispatch({\n        type: SIGN_IN,\n        user: data.user,\n        token: data.token,\n        isLoading: false,\n        isAuth: true\n      });\n    }).catch(err => console.log(err));\n  };\n}\nexport function logOut() {\n  return dispatch => {\n    cookies.remove('token');\n    dispatch({\n      type: LOG_OUT\n    });\n  };\n}","map":{"version":3,"sources":["/Users/symbat.askarova33gmail.com/Desktop/program-js/src/client/redux/reducers/sign.js"],"names":["axios","Cookies","TRY_SIGN_IN","SIGN_IN","LOG_OUT","cookies","initialState","token","get","user","isLoading","isAuth","state","action","type","trySignIn","dispatch","then","data","signIn","userInformation","post","catch","err","console","log","logOut","remove"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport Cookies from 'universal-cookie'\r\nimport {TRY_SIGN_IN, SIGN_IN, LOG_OUT} from '../actions/actions'\r\n\r\nconst cookies = new Cookies()\r\n\r\nconst initialState = {\r\n  token: cookies.get('token'),\r\n  user: '',\r\n  isLoading: true,\r\n  isAuth : false\r\n}\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {...state, user: action.user, token: action.token, isLoading: action.isLoading, isAuth:action.isAuth}\r\n    case TRY_SIGN_IN:\r\n      return {...state, user: action.user, token: action.token, isLoading: action.isLoading, isAuth: action.isAuth}\r\n    case LOG_OUT:\r\n      return {...state, user: '', token: '', isAuth: false}\r\n    case 'FAILED_LOAD':\r\n      return {...state, isLoading: false}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function trySignIn() {\r\n  return (dispatch) => {\r\n    axios.get('/api/v1/signin').then(({data}) => {\r\n      dispatch({\r\n        type: TRY_SIGN_IN,\r\n        user: data.user,\r\n        token: data.token,\r\n        isLoading: false,\r\n        isAuth: true\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport function signIn(userInformation) {\r\n  return (dispatch) => {\r\n    axios.post('/api/v1/signin', userInformation).then(({data}) => {\r\n      dispatch({\r\n        type: SIGN_IN,\r\n        user: data.user,\r\n        token: data.token,\r\n        isLoading: false,\r\n        isAuth: true\r\n      })\r\n    }).catch((err)=> console.log(err))\r\n  }\r\n}\r\n\r\nexport function logOut() {\r\n  return (dispatch) => {\r\n    cookies.remove('token')\r\n    dispatch({type: LOG_OUT})\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}