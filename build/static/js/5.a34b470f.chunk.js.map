{"version":3,"sources":["client/components/CodeBlock.js","client/components/MarkdownToHtml.js","client/components/LinksHistory/LinksHistory.js","client/scenes/Lesson/Lesson.js"],"names":["CodeBlock","value","this","props","language","style","atomOneDark","PureComponent","MarkdownToHtml","content","className","source","renderers","code","escapeHtml","Links","weekId","currentTask","dispatch","useDispatch","weeks","useSelector","s","useState","undefined","currentWeek","setCurrentWeek","useEffect","length","find","week","to","name","Lesson","tasks","setCurrentTask","prevTask","setPrevTask","nextTask","setNextTask","setContent","useParams","taskId","lessonRef","React","createRef","handleClick","current","scrollIntoView","behavior","block","getTasks","el","date","findIndex","getWeeks","title","ref","onClick","history","push"],"mappings":"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","file":"static/js/5.a34b470f.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\nimport { atomOneDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\r\n\r\nclass CodeBlock extends PureComponent {\r\n  render() {\r\n    const { value } = this.props\r\n    return (\r\n      <SyntaxHighlighter language=\"javascript\" style={atomOneDark}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CodeBlock","import ReactMarkdown from \"react-markdown\";\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\nconst MarkdownToHtml = ({content}) => {\r\n  return (\r\n    <div className=\"custom-html-style \">\r\n      <ReactMarkdown source={content} renderers={{code: CodeBlock}} escapeHtml={false}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarkdownToHtml","import {useEffect, useState} from 'react'\r\nimport './linkHistory.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst Links = ({weekId, currentTask}) => {\r\n  const dispatch = useDispatch()\r\n  const weeks = useSelector((s) => s.weeks.weeks)\r\n  const [currentWeek, setCurrentWeek] = useState(undefined)\r\n  useEffect(() => {\r\n    if(weeks.length > 0) {\r\n      setCurrentWeek(weeks.find((week) => week.week === weekId))\r\n    }\r\n  }, [dispatch, weekId, weeks])\r\n\r\n\r\n\r\n  if(currentWeek) return (\r\n    <div className=\"link-history\">\r\n      <Link className=\"link-history__link\" to={`/education/${weekId}`}>\r\n        {currentWeek?.name}\r\n      </Link>\r\n      {currentTask && <span> / {currentTask && currentTask?.name} </span> }\r\n    </div>\r\n  )\r\n  return null\r\n}\r\n\r\nexport default Links","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getTasks, getWeeks} from \"../../redux/reducers/weeks\";\r\nimport {history} from '../../redux'\r\nimport '../../../assets/css/markdown.scss'\r\nimport './lesson.scss'\r\nimport Head from \"../../components/Head\";\r\nimport MarkdownToHtml from \"../../components/MarkdownToHtml\";\r\nimport LinksHistory from \"../../components/LinksHistory/LinksHistory\";\r\n\r\nconst Lesson = () => {\r\n  const tasks = useSelector((s) => s.weeks.tasks)\r\n  const weeks = useSelector((s) => s.weeks.weeks)\r\n  const [currentTask, setCurrentTask] = useState({})\r\n  const [prevTask, setPrevTask] = useState('')\r\n  const [nextTask, setNextTask] = useState('')\r\n  const [content, setContent] = useState('### Almost ready...')\r\n  const {weekId, taskId} = useParams()\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  // add scroll to element\r\n\r\n  const lessonRef = React.createRef();\r\n\r\n  const handleClick = () =>\r\n    lessonRef.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'start',\r\n    });\r\n\r\n  // END add scroll to element\r\n\r\n\r\n  useEffect(() => {\r\n    if (tasks.length <= 0) {\r\n      dispatch(getTasks(weekId, taskId))\r\n    } else {\r\n      setCurrentTask(tasks.find((el) => el.date === +taskId))\r\n      setPrevTask(tasks[tasks.findIndex((el) => el.date === +taskId) - 1])\r\n      setNextTask(tasks[tasks.findIndex((el) => el.date === +taskId) + 1])\r\n      setContent(tasks.find((el) => el.date === +taskId).content)\r\n    }\r\n  }, [dispatch, taskId, tasks, weekId])\r\n\r\n  useEffect(() => {\r\n    if (weeks.length <= 0)\r\n      dispatch(getWeeks())\r\n  }, [dispatch, weeks.length])\r\n\r\n  return (\r\n    <>\r\n      <Head title=\"Lesson\">\r\n      </Head>\r\n      {weekId && <LinksHistory weekId={weekId} currentTask={currentTask}/>}\r\n      <section className=\"lesson\" ref={lessonRef}>\r\n        <h2 className=\"lesson__title\">{currentTask.name}</h2>\r\n        <MarkdownToHtml content={content}/>\r\n        <div className=\"mb-5\">\r\n          <div className=\"inline-flex\">\r\n            {prevTask &&\r\n            <button\r\n              onClick={() => {\r\n                history.push(`/education/${weekId}/${prevTask.date}`)\r\n                handleClick()\r\n              }}\r\n              className=\"bg-gray-400 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded-l\">\r\n              Prev\r\n            </button>\r\n            }\r\n            {nextTask &&\r\n            <button\r\n              onClick={() => {history.push(`/education/${weekId}/${nextTask.date}`)\r\n                handleClick()\r\n              }}\r\n              className=\"bg-gray-400 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded-r\">\r\n              Next\r\n            </button>\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n\r\n}\r\nexport default Lesson"],"sourceRoot":""}