{"version":3,"sources":["client/components/LinksHistory/LinksHistory.js","client/components/education/EducationList.js","client/hooks/useSticky.js","client/components/education/EducationTasks.js","client/scenes/Education.js"],"names":["Links","weekId","currentTask","dispatch","useDispatch","weeks","useSelector","s","useState","undefined","currentWeek","setCurrentWeek","useEffect","length","find","week","className","to","name","EducationList","handleClick","map","cx","isUnlock","onClick","history","push","window","outerWidth","Date","date","toDateString","stickyBlock","blockSelector","stickyClass","stickyOffSet","block","document","querySelector","blockHeight","offsetHeight","windowHeight","outerHeight","classList","add","remove","useSticky","itemsList","EducationTasks","tasks","refTasks","ref","task","description","Education","useParams","React","createRef","getWeeks","isOpenWeek","useMemo","getTasks","Head","title","LinksHistory","current","scrollIntoView","behavior"],"mappings":"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","file":"static/js/6.7a7183c0.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport './linkHistory.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst Links = ({weekId, currentTask}) => {\r\n  const dispatch = useDispatch()\r\n  const weeks = useSelector((s) => s.weeks.weeks)\r\n  const [currentWeek, setCurrentWeek] = useState(undefined)\r\n  useEffect(() => {\r\n    if(weeks.length > 0) {\r\n      setCurrentWeek(weeks.find((week) => week.week === weekId))\r\n    }\r\n  }, [dispatch, weekId, weeks])\r\n\r\n\r\n\r\n  if(currentWeek) return (\r\n    <div className=\"link-history\">\r\n      <Link className=\"link-history__link\" to={`/education/${weekId}`}>\r\n        {currentWeek?.name}\r\n      </Link>\r\n      {currentTask && <span> / {currentTask && currentTask?.name} </span> }\r\n    </div>\r\n  )\r\n  return null\r\n}\r\n\r\nexport default Links","import cx from 'classnames'\r\nimport {history} from \"../../redux\";\r\n\r\nconst EducationList = ({weeks, weekId, handleClick}) => {\r\n\r\n  return <div className=\"education-list__items\">\r\n    {weeks.map((week) => (\r\n      <div\r\n        key={week.week}\r\n        className={cx(\"education-list__item\", {'active': weekId === week.week}, {'close-card': !week.isUnlock})}\r\n        onClick={() => {\r\n          if (week.isUnlock) {\r\n            history.push(`/education/${week.week}`)\r\n          }\r\n          if (window.outerWidth < 501) {\r\n            handleClick()\r\n          }\r\n        }}\r\n      >\r\n        <div className=\"education-list__id\">week {week.week}</div>\r\n        <div className=\"education-list__name\">{week.name}</div>\r\n        <div className=\"education-list__date\">{new Date(week.date).toDateString()}</div>\r\n        {week.isUnlock || <div className=\"education-list__close\"><i className=\"fas fa-lock\"/> week closed</div>}\r\n      </div>\r\n    ))}\r\n  </div>\r\n}\r\n\r\nexport default EducationList","import {useEffect} from 'react'\r\n\r\nexport function stickyBlock(blockSelector, stickyClass, stickyOffSet, ) {\r\n  const block = document.querySelector(blockSelector)\r\n  const blockHeight = block && block.offsetHeight\r\n  const windowHeight = window.outerHeight\r\n  if (blockHeight) {\r\n    const isSticky = windowHeight - (blockHeight + stickyOffSet) > 0\r\n    isSticky ? block.classList.add(stickyClass) : block.classList.remove(stickyClass)\r\n  }\r\n}\r\n\r\nconst useSticky = (itemsList,blockSelector, stickyClass = '', stickyOffSet = 0, ) => {\r\n  useEffect(() => {\r\n    if (blockSelector && itemsList)\r\n    stickyBlock(blockSelector, stickyClass, stickyOffSet)\r\n  }, [itemsList, blockSelector, stickyOffSet, stickyClass])\r\n}\r\n\r\nexport default useSticky\r\n\r\n","import cx from 'classnames'\r\nimport {history} from \"../../redux\";\r\nimport useSticky from \"../../hooks/useSticky\";\r\n\r\nconst EducationTasks = ({weekId, tasks, refTasks}) => {\r\n\r\n  useSticky(tasks, '.education-tasks__content',  'education__sticky', 100,)\r\n\r\n  return <div className=\"education-tasks__items\" ref={refTasks}>\r\n    <div className=\"education-tasks__content\">\r\n      {tasks.map((task) => (\r\n          <button\r\n            key={task.date}\r\n            className={cx(\"education-tasks__item\", {'active': weekId === task.week})}\r\n            onClick={() => history.push(`/education/${task.week}/${task.date}`)}\r\n          >\r\n            <span className=\"education-tasks__name\">{task.name}</span>\r\n            <span className=\"education-tasks__description\">{task.description}</span>\r\n          </button>\r\n        )\r\n      )}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default EducationTasks","import React, {useEffect, useMemo} from 'react'\r\nimport Head from \"../components/Head\";\r\nimport EducationList from \"../components/education/EducationList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom'\r\nimport '../components/education/education.scss'\r\nimport EducationTasks from \"../components/education/EducationTasks\";\r\nimport LinksHistory from \"../components/LinksHistory/LinksHistory\";\r\nimport {getTasks, getWeeks} from \"../redux/reducers/weeks\";\r\n\r\nconst Education = () => {\r\n  const weeks = useSelector((s) => s.weeks.weeks)\r\n  const tasks = useSelector((s) => s.weeks.tasks)\r\n  const {weekId} = useParams()\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  // add scroll to element\r\n  const refTasks = React.createRef();\r\n\r\n  const handleClick = () => {\r\n    if (refTasks.current !== null) {\r\n      refTasks.current.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'center',\r\n      });\r\n    }\r\n  }\r\n  // END add scroll to element\r\n\r\n  useEffect(() => {\r\n    if (!weeks.length)\r\n      dispatch(getWeeks())\r\n  }, [dispatch, weeks.length])\r\n\r\n  const isOpenWeek = useMemo(() => weeks.find(week => week.week === weekId)?.isUnlock, [weekId, weeks])\r\n\r\n  useEffect(() => {\r\n    isOpenWeek && dispatch(getTasks(weekId))\r\n  }, [dispatch, isOpenWeek, weekId])\r\n\r\n  return (\r\n    <>\r\n      <Head title=\"Education\">\r\n      </Head>\r\n      {weekId && <LinksHistory weekId={weekId}/>}\r\n      <section className=\"education\">\r\n        <EducationList weeks={weeks} weekId={weekId} handleClick={handleClick}/>\r\n        {weekId && <EducationTasks weekId={weekId} tasks={tasks} refTasks={refTasks}/>}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Education"],"sourceRoot":""}