{"version":3,"sources":["client/components/CodeBlock.js","client/components/MarkdownToHtml.js","client/components/homework/HomeworkList.js","client/components/homework/HomeworkContent.js","client/components/homework/CommentsMDE.js","client/components/homework/HomeworkComments.js","client/scenes/Homework.js"],"names":["CodeBlock","value","this","props","language","style","atomOneDark","PureComponent","MarkdownToHtml","content","className","source","renderers","code","escapeHtml","HomeworkList","homeworks","workId","user","map","homework","cx","work","onClick","isUnlock","history","push","includes","name","Date","date","toDateString","HomeworkContent","dispatch","useDispatch","useState","setHomework","useEffect","length","find","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","CommentsMDE","userName","setValue","alert","setAlert","React","selectedTab","setSelectedTab","onChange","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","type","setTimeout","createMessage","message","HwComments","comments","useSelector","s","useParams","getComments","comment","id","deleteComment","toLocaleString","year","month","weekday","day","hour","minute","Homework","signIn","getHomeworks","Head","title","path","exact","component","first_name"],"mappings":"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","file":"static/js/7.cde60021.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\nimport { atomOneDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs'\r\n\r\nclass CodeBlock extends PureComponent {\r\n  render() {\r\n    const { value } = this.props\r\n    return (\r\n      <SyntaxHighlighter language=\"javascript\" style={atomOneDark}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CodeBlock","import ReactMarkdown from \"react-markdown\";\r\nimport CodeBlock from \"./CodeBlock\";\r\n\r\nconst MarkdownToHtml = ({content}) => {\r\n  return (\r\n    <div className=\"custom-html-style \">\r\n      <ReactMarkdown source={content} renderers={{code: CodeBlock}} escapeHtml={false}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarkdownToHtml","import cx from \"classnames\";\r\nimport {history} from \"../../redux\";\r\n\r\n\r\nconst HomeworkList = ({homeworks, workId, user} ) => {\r\n\r\n  return (\r\n    <div className=\"homework-list__items\">\r\n      {homeworks.map((homework) => (\r\n        <div\r\n          key={homework.work}\r\n          className={cx(\"homework-list__item\", {'active': +workId === homework.work})}\r\n          onClick={() => {\r\n            if (homework.isUnlock) {\r\n              history.push(`/homework/list/${homework.work}`)\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"homework-list__id\">Homework {homework.work}\r\n            { user.homeworks.includes(homework.work) && <span className=\"homework-list__check\">&#10004;</span>}\r\n          </div>\r\n          <div className=\"homework-list__name\">{homework.name}</div>\r\n          <div className=\"homework-list__date\">{new Date(homework.date).toDateString()}</div>\r\n          {homework.isUnlock || <div className=\"homework-list__close\"><i className=\"fas fa-lock\"/> Homework closed</div>}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeworkList","import { useEffect, useState } from 'react'\r\nimport MarkdownToHtml from \"../MarkdownToHtml\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst HomeworkContent = ({ homeworks, workId }) => {\r\n  const dispatch = useDispatch()\r\n  const [homework, setHomework] = useState({content: ''})\r\n\r\n  useEffect(() => {\r\n    if (homeworks.length > 0) {\r\n      setHomework(homeworks.find((homework) => homework.work === +workId))\r\n    }\r\n  }, [dispatch, homeworks, workId])\r\n\r\n  return (\r\n      <MarkdownToHtml content={homework.content}/>\r\n  )\r\n}\r\n\r\nexport default HomeworkContent","import * as React from 'react'\r\nimport ReactMde from 'react-mde'\r\nimport * as Showdown from 'showdown'\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\n\r\nimport {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {createMessage} from \"../../redux/reducers/homeworks\";\r\n\r\nconst converter = new Showdown.Converter({\r\n  tables: true,\r\n  simplifiedAutoLink: true,\r\n  strikethrough: true,\r\n  tasklists: true\r\n})\r\n\r\nexport default function CommentsMDE({workId, userName}) {\r\n  const [value, setValue] = useState('')\r\n  const [alert, setAlert] = useState('')\r\n  const [selectedTab, setSelectedTab] = React.useState('write')\r\n  const dispatch = useDispatch()\r\n\r\n  const postComment = () => {\r\n    if (value.length < 10) {\r\n      setAlert('Type at least 10 symbols')\r\n      setTimeout(() => {\r\n          setAlert('')\r\n        },5000)\r\n    } else {\r\n      dispatch(createMessage(workId, {user: userName, message: value}))\r\n      setValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"homework-comments__mde\">\r\n      <span className=\"homework-comments__mde-alert\">{alert}</span>\r\n      <ReactMde\r\n        value={value}\r\n        onChange={setValue}\r\n        selectedTab={selectedTab}\r\n        onTabChange={setSelectedTab}\r\n        generateMarkdownPreview={(markdown) => Promise.resolve(converter.makeHtml(markdown))}\r\n      />\r\n      <button\r\n        type=\"button\"\r\n        className=\"homework-comments__mde-post\"\r\n        onClick={postComment}\r\n      >\r\n        Send\r\n      </button>\r\n    </div>\r\n  )\r\n}","import {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteComment, getComments} from \"../../redux/reducers/homeworks\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport MarkdownToHtml from \"../MarkdownToHtml\";\r\nimport CommentsMDE from \"./CommentsMDE\";\r\n\r\n\r\nconst HwComments = ({userName}) => {\r\n  const comments = useSelector((s) => s.homeworks.comments)\r\n\r\n  const dispatch = useDispatch()\r\n  const {workId} = useParams()\r\n\r\n  useEffect(() => {\r\n    dispatch(getComments(+workId, userName))\r\n  }, [dispatch, userName, workId])\r\n  return (\r\n    <div className=\"homework-comments\">\r\n      {\r\n        comments.map((comment, id) => (\r\n          <div className=\"homework-comments__comment\" key={id}>\r\n            <div className=\"homework-comments__top\">\r\n              <div className=\"homework-comments__name\">{comment.user} sent a message:</div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"homework-comments__delete-btn\"\r\n                onClick={() => dispatch(deleteComment(+workId, comment.date))}\r\n              >\r\n                &#10005;</button>\r\n            </div>\r\n            <MarkdownToHtml content={comment.message}/>\r\n            <div className=\"homework-comments__date\">{new Date(comment.date)\r\n              .toLocaleString(\"en-US\",\r\n                {\r\n                  year: 'numeric',\r\n                  month: '2-digit',\r\n                  weekday: 'long',\r\n                  day: '2-digit',\r\n                  hour: 'numeric',\r\n                  minute: 'numeric'\r\n                }\r\n              )}</div>\r\n          </div>\r\n        ))\r\n      }\r\n      <CommentsMDE userName={userName} workId={workId}/>\r\n    </div>\r\n  )\r\n}\r\nexport default HwComments","import React, {useEffect} from 'react'\r\nimport Head from \"../components/Head\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getHomeworks} from \"../redux/reducers/homeworks\";\r\nimport HomeworkList from \"../components/homework/HomeworkList\";\r\nimport {Route, useParams} from 'react-router-dom';\r\nimport '../components/homework/homework.scss';\r\nimport HomeworkContent from \"../components/homework/HomeworkContent\";\r\nimport HwComments from \"../components/homework/HomeworkComments\";\r\n\r\nconst Homework = () => {\r\n  const homeworks = useSelector((s) => s.homeworks.homeworks)\r\n  const user = useSelector((s) => s.signIn.user)\r\n  const dispatch = useDispatch()\r\n  const { workId } = useParams()\r\n  useEffect(() => {\r\n    if (!homeworks.length) {\r\n      dispatch(getHomeworks())\r\n    }\r\n  }, [dispatch, homeworks.length])\r\n  return (\r\n    <>\r\n      <Head title=\"Homework\">\r\n      </Head>\r\n      <section className=\"homework\">\r\n        <HomeworkList homeworks={homeworks} workId={workId} user={user}/>\r\n        <div className=\"homework-content\">\r\n          <Route path=\"/homework/list/:workId\" exact component={() => <HomeworkContent homeworks={homeworks} workId={workId}/>}/>\r\n          <Route path=\"/homework/list/:workId\" exact component={() => <HwComments userName={user.first_name}/>}/>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Homework"],"sourceRoot":""}